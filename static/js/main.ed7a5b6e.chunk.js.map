{"version":3,"sources":["components/UsersListPage/Grid/grid-action.entity.js","components/UsersListPage/Grid/partials.jsx","components/UsersListPage/Grid/GridRowContextMenu.jsx","components/UsersListPage/Grid/Grid.jsx","components/UsersListPage/AddUserForm/AddForm.jsx","components/UsersListPage/AddUserForm/styles.js","services/http/http-service.js","utils/LocalStorageUtil.js","services/data/DataService.jsx","components/UsersListPage/UsersList.jsx","components/UsersListPage/styles.js","components/LoginPage/LogInForm/LogInForm.jsx","components/LoginPage/LogInForm/styles.js","components/LoginPage/LogInPage.jsx","components/LoginPage/styles.js","components/TestApp.jsx","App.js","serviceWorker.js","index.js"],"names":["GridAction","id","title","action","Object","classCallCheck","this","assign","createClass","key","value","data","ContextMenuBtn","_ref","onClick","react_default","a","createElement","IconButton_default","style","padding","aria-label","aria-haspopup","MoreHoriz_default","color","fontSize","GridRowContextMenu","_React$Component","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","opened","target","openMenu","currentTarget","setState","closeMenu","inherits","props","onAction","rowData","_this2","menuBtn","actions","partials_ContextMenuBtn","className","Menu_default","anchorEl","open","onClose","map","MenuItem_default","onActionClick","bind","React","Component","Grid","columnOptions","actionsColumn","headerStyle","width","textAlign","sortable","_this$props","datatable","column","field","header","body","GridRowContextMenu_GridRowContextMenu","defaultProps","selectedItems","CustomizedButton","withStyles","root","marginLeft","Button","AddForm","userName","userEmail","password","keydown","e","nameInput","emailInput","passwordInput","addUser","document","addEventListener","removeEventListener","_this$state","clearInputValues","onUserAdd","email","name","_this$props$classes","classes","input","TextField_default","label","type","onChange","nameInputHandler","emailInputHandler","passwordInputHandler","variant","display","justifyContent","margin","HttpService","axios","create","baseURL","_getLocalStorage","localStorage","window","console","error","getLocalItem","getItem","DataService","DataServiceClass","httpService","undefined","params","post","then","defaults","headers","common","setItem","setLocalItem","token","get","Authorization","_ref2","formData","delete","removeItem","removeLocalItem","ListOfUsers","users","deleteUser","loadData","getUsersList","catch","history","push","triggerAction","item","execute","logOut","resetSession","_id","_this3","log","process","upperBlock","AddUserForm_AddForm","UsersList_CustomizedButton","Grid_Grid","LogInForm","signIn","onSignIn","LogInForm_CustomizedButton","flexDirection","LogInPage","erorMessage","removeAttribute","querySelector","setAttribute","wrongCreds","LoginPage_LogInForm_LogInForm","alignItems","font","fontWeight","TestApp","react_router_dom","react_router","exact","path","component","LoginPage","UserList","App","TestApp_TestApp","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed7a5b6e.chunk.js","sourcesContent":["/**\n * @property {string} id\n * @property {string} title\n * @property {Function} action\n */\nexport class GridAction {\n  constructor(id, title, action) {\n    Object.assign(this, { id, title, action });\n  }\n\n  execute(data) {\n    return this.action(data);\n  }\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nexport const ContextMenuBtn = ({ onClick }) => (\n  <IconButton\n    style={{ padding: 0 }}\n    aria-label=\"More\"\n    aria-haspopup=\"true\"\n    onClick={onClick}>\n    <MoreHorizIcon style={{ color: '#27a6d6', fontSize: '40px' }}/>\n  </IconButton>\n);\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu/Menu';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\nimport PropTypes from 'prop-types';\nimport { GridAction } from './grid-action.entity';\nimport { ContextMenuBtn } from './partials';\n\nexport class GridRowContextMenu extends React.Component {\n\n  static propTypes = {\n    rowData: PropTypes.object,\n    actions: PropTypes.arrayOf(PropTypes.instanceOf(GridAction)).isRequired,\n    onAction: PropTypes.func,\n  };\n\n  state = {\n    opened: false,\n    target: null,\n  };\n\n  openMenu = ({ currentTarget }) => {\n    this.setState({\n      opened: true,\n      target: currentTarget,\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      opened: false,\n      target: null,\n    });\n  };\n\n  onActionClick(action) {\n    this.props.onAction(action, this.props.rowData);\n    this.closeMenu();\n  }\n\n  render() {\n    const menuBtn = this.props.actions.length\n      ? <ContextMenuBtn className=\"grid-context-btn\" onClick={this.openMenu}/>\n      : null;\n\n    return (\n      <div>\n        {menuBtn}\n\n        <Menu anchorEl={this.state.target}\n              open={this.state.opened}\n              onClose={this.closeMenu}>\n          {this.props.actions.map(action => {\n            return (\n              <MenuItem key={action.id} onClick={this.onActionClick.bind(this, action)}>\n                {action.title}\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </div>\n    );\n  }\n}\n","import './grid.sass';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DataTable } from 'primereact/datatable';\nimport { GridAction } from './grid-action.entity';\nimport { Column } from 'primereact/column';\nimport { GridRowContextMenu } from './GridRowContextMenu';\n\n\nexport class Grid extends React.Component {\n\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.instanceOf(GridAction)),\n    onAction: PropTypes.func,\n  };\n\n  static defaultProps = {\n    actions: [],\n    selectedItems: [],\n  };\n\n  columnOptions = {\n    actionsColumn: {\n      headerStyle: { width: '60px', textAlign: 'center' },\n      style: { textAlign: 'center' },\n      sortable: false\n    }\n  };\n\n  render() {\n    const { data, actions, onAction } = this.props;\n    return (\n      <DataTable value={data}>\n        <Column key='name' field='name' header='name'/>\n        <Column key='email' field='email' header='email'/>\n        <Column key='password' field='password' header='password'/>\n        <Column\n          key=\"actionsColumn\"\n          body={data => getActionCellTemplate(data, { actions, onAction })}\n          className=\"grid-context-menu-column\"\n          {...this.columnOptions['actionsColumn']}/>\n      </DataTable>\n    );\n  }\n}\n\nfunction getActionCellTemplate(rowData, props) {\n  return (\n    <GridRowContextMenu {...props} rowData={rowData}></GridRowContextMenu>\n  );\n}\n","import React from 'react';\nimport { AddFormStyles } from './styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport { ButtonStyles } from './styles';\nimport Button from '@material-ui/core/Button/index';\n\nconst CustomizedButton = withStyles(ButtonStyles)(Button);\n\n\nclass AddForm extends React.Component {\n\n  state = {\n    userName: '',\n    userEmail: '',\n    password: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keydown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keydown, false);\n  }\n\n  keydown = (e) => {\n    if (e.key === 'Enter' && (e.target === this.nameInput || e.target === this.emailInput || e.target === this.passwordInput)) {\n      this.addUser();\n    }\n  };\n\n  nameInputHandler(e) {\n    this.nameInput = e.target;\n    this.setState({ userName: e.target.value });\n  };\n\n  emailInputHandler(e) {\n    this.emailInput = e.target;\n    this.setState({ userEmail: e.target.value });\n  };\n\n  passwordInputHandler(e) {\n    this.passwordInput = e.target;\n    this.setState({ password: e.target.value });\n  }\n\n  clearInputValues() {\n    if (this.nameInput && this.emailInput && this.passwordInput) {\n      this.nameInput.value = '';\n      this.emailInput.value = '';\n      this.passwordInput.value = '';\n    }\n  }\n\n  addUser() {\n    const { userName, userEmail, password } = this.state;\n\n    this.clearInputValues();\n    this.props.onUserAdd({ 'password': password, 'email': userEmail, 'name': userName });\n  }\n\n  render() {\n    const { root, input } = this.props.classes;\n    return (\n      <div className={root}>\n        <TextField className={input} label='Name' type=\"text\" onChange={(e) => this.nameInputHandler(e)}/>\n        <TextField className={input} label=\"Email\" type=\"text\" onChange={(e) => this.emailInputHandler(e)}/>\n        <TextField className={input} label=\"Password\" type=\"password\" onChange={(e) => this.passwordInputHandler(e)}/>\n        <CustomizedButton onClick={() => this.addUser()} variant=\"contained\" color=\"primary\">Add user</CustomizedButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(AddFormStyles)(AddForm);","export const AddFormStyles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  input: {\n    margin: '0 0 0 10px'\n  }\n};\n\nexport const ButtonStyles = {\n  root: {\n    width: '100px',\n    marginLeft: '10px',\n    padding: '5px'\n  }\n};","import axios from 'axios';\n\n/**\n * @type {AxiosInstance}\n */\nconst HttpService = axios.create({baseURL: 'https://quiet-dawn-70829.herokuapp.com'});\n\nexport default HttpService;\n","const _getLocalStorage = () => {\n  let localStorage;\n  try {\n    localStorage = window.localStorage;\n  } catch (e) {\n    console && console.error('LocalStorageUtil: window.localStorage is inaccessible');\n  }\n  return localStorage;\n};\n\nexport const getLocalItem = (key) => {\n  const localStorage = _getLocalStorage();\n  return localStorage ? localStorage.getItem(key) : null;\n};\n\nexport const setLocalItem = (key, value) => {\n  const localStorage = _getLocalStorage();\n  localStorage && localStorage.setItem(key, value);\n};\n\nexport const removeLocalItem = (key) => {\n  const localStorage = _getLocalStorage();\n  localStorage && localStorage.removeItem(key);\n};\n\n","import HttpService from '../http/http-service';\nimport { setLocalItem, getLocalItem, removeLocalItem } from '../../utils/LocalStorageUtil';\n\n/**\n * @property {AxiosInstance} httpService\n */\nclass DataServiceClass {\n\n  constructor(httpService) {\n    Object.assign(this, { httpService });\n  }\n\n  signIn(email = '', password = '') {\n    const params = {\n      password,\n      email\n    };\n\n    return this.httpService\n      .post('/sign-in', params)\n      .then(({ data }) => {\n        this.httpService.defaults.headers.common['Content-Type'] = 'application/json';\n        setLocalItem('authToken', data.token);\n      });\n  }\n\n  getUsersList() {\n    const token =  getLocalItem('authToken');\n    return this.httpService\n      .get('/users', {'headers': {'Authorization' : `Bearer ${token}`}})\n      .then(({ data }) => data);\n  };\n\n  addUser(formData) {\n    const token =  getLocalItem('authToken');\n    return this.httpService\n      .post('/users', formData, {'headers': {'Authorization' : `Bearer ${token}`}});\n  };\n\n  deleteUser(id) {\n    const token =  getLocalItem('authToken');\n    return this.httpService\n      .delete(`/users/${id}`, {'headers': {'Authorization' : `Bearer ${token}`}});\n  };\n\n  resetSession() {\n    removeLocalItem('authToken');\n  }\n}\n\nexport const DataService = new DataServiceClass(HttpService);\n\n\n","import React from 'react';\nimport { Grid } from './Grid/Grid';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ListOfUsersStyles, ButtonStyles } from './styles';\nimport { GridAction } from './Grid/grid-action.entity';\nimport AddForm from './AddUserForm/AddForm';\nimport { DataService } from '../../services/data/DataService';\nimport Button from '@material-ui/core/Button/index';\n\nconst CustomizedButton = withStyles(ButtonStyles)(Button);\n\nclass ListOfUsers extends React.Component {\n  state = {\n    users: []\n  };\n\n  actions = [new GridAction('delete', 'Delete user', (e) => this.deleteUser(e))];\n\n  loadData = () => {\n    return DataService.getUsersList()\n      .then(users => {\n        this.setState({ users: users });\n      })\n      .catch(() => this.props.history.push('/'));\n  };\n\n  componentWillMount() {\n    this.loadData();\n  }\n\n  triggerAction = (action, item) => {\n    action.execute(item);\n  };\n\n  deleteUser({ _id }) {\n    return DataService.deleteUser(_id).then(() => this.loadData());\n  }\n\n  addUser = (formData) => {\n    return DataService.addUser(formData).then(() => this.loadData());\n  };\n\n  logOut = () => {\n    this.props.history.push('/');\n    DataService.resetSession();\n  };\n\n  render() {\n    console.log(process.env);\n    const { root, upperBlock } = this.props.classes;\n    return (\n      <div className={root}>\n        <div className={upperBlock}>\n          <AddForm onUserAdd={this.addUser}/>\n          <CustomizedButton onClick={() => this.logOut()} variant=\"contained\" color=\"secondary\">Log\n            Out</CustomizedButton>\n        </div>\n        <Grid data={this.state.users}\n              actions={this.actions}\n              onAction={this.triggerAction}/>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(ListOfUsersStyles)(ListOfUsers);\n","export const ListOfUsersStyles = {\n  upperBlock: {\n    display: 'flex',\n    justifyContent: 'space-around'\n  }\n};\n\nexport const ButtonStyles = {\n\n};","import React from 'react';\nimport { LogInFormStyles } from './styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport { ButtonStyles } from './styles';\nimport Button from '@material-ui/core/Button/index';\n\nconst CustomizedButton = withStyles(ButtonStyles)(Button);\n\nclass LogInForm extends React.Component {\n\n  state = {\n    email: '',\n    password: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.keydown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.keydown, false);\n  }\n\n  keydown = (e) => {\n    if (e.key === 'Enter' && (e.target === this.passwordInput || e.target === this.passwordInput)) {\n      this.signIn();\n    }\n  };\n\n  emailInputHandler(e) {\n    this.emailInput = e.target;\n    this.setState({ email: e.target.value });\n  };\n\n  passwordInputHandler(e) {\n    this.passwordInput = e.target;\n    this.setState({ password: e.target.value });\n  };\n\n  clearInputValues() {\n    if (this.emailInput && this.passwordInput) {\n      this.emailInput.value = '';\n      this.passwordInput.value = '';\n    }\n  }\n\n  signIn() {\n    const { email, password } = this.state;\n\n    this.clearInputValues();\n    this.props.onSignIn(email, password);\n  }\n\n  render() {\n    const { root } = this.props.classes;\n    return (\n      <div className={root}>\n        <TextField label=\"Email\" type=\"email\" onChange={(e) => this.emailInputHandler(e)}/>\n        <TextField label=\"Password\" type=\"password\" onChange={(e) => this.passwordInputHandler(e)}/>\n        <CustomizedButton onClick={() => this.signIn()} variant=\"contained\" color=\"primary\"> Sign In</CustomizedButton>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(LogInFormStyles)(LogInForm);","export const ButtonStyles = {\n  root: {\n    width: '100px',\n    margin: '5px 0',\n  },\n};\n\nexport const LogInFormStyles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n};","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { LoginPageStyles } from './styles';\nimport LoginForm from './LogInForm/LogInForm';\nimport { DataService } from '../../services/data/DataService';\n\nclass LogInPage extends React.Component {\n\n  signIn = (email, password) => {\n    return DataService.signIn(email, password)\n      .then(() => {\n        if (this.erorMessage) this.erorMessage.removeAttribute('style');\n        this.props.history.push('/list');\n      })\n      .catch(() => {\n        this.erorMessage = document.querySelector('#errorMessage');\n        this.erorMessage.setAttribute('style', 'display: block');\n      });\n  };\n\n  render() {\n    console.log(process.env);\n    const { root, header, wrongCreds } = this.props.classes;\n    return (\n      <div className={root}>\n        <p className={header}> Welcome to my test app </p>\n        <LoginForm onSignIn={this.signIn}/>\n        <p id='errorMessage' className={wrongCreds}> Email or password is incorrect </p>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(LoginPageStyles)(LogInPage);\n","export const LoginPageStyles = {\n  root: {\n    width: '300px',\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  header: {\n    font: '14px',\n    fontWeight: 'bold',\n  },\n  wrongCreds: {\n    font: '14px',\n    fontWeight: 'bold',\n    color: 'red',\n    display: 'none'\n  }\n\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport UserList from './UsersListPage/UsersList';\nimport LoginPage from './LoginPage/LogInPage';\n\nexport default class TestApp extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path={process.env.PUBLIC_URL + '/'} component={LoginPage}/>\n          <Route path={process.env.PUBLIC_URL + '/list'} component={UserList}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport TestApp from './components/TestApp'\n\nclass App extends Component {\n  render() {\n    return <TestApp />\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}